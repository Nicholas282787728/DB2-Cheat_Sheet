PMR Info...

Site code: 7397427
Cust Nbr:  9235536

### DB2 version  ###

### db2idrop command deletes entries in /etc/services too ###

### Testing Team Notes ###
ROM back date “order date” 191 days using Stored Procedure db2 “call db2inst3.CLRREQBYSSN(‘123456789’,’U’,?,?,?)” input(SSN, “U” (update) or “L” (list)
The testing team, reuses the same set of SSNs, to test ROM, but ROM requests are limited to once per six months.

/db2/lcformsi/logs/archive/lcformsi/LCFORMS/NODE0000/C0000001] find . -name "*.LOG" -mtime  +1 |xargs /bin/rm –f	# remove archive logs from LCFORMS

Produce an alphabetical list of comma-separated names, grouped by department.
   SELECT workdept, 
         LISTAGG(lastname, ', ') WITHIN GROUP(ORDER BY lastname)
         AS employees 
      FROM emp 
      GROUP BY workdept

db2level 

db2licm -v 

ulimit –Hfdn (CPDB02 TRDB instance owner) 
file(blocks)         2097151
data(kbytes)         unlimited
nofiles(descriptors) unlimited

Location of license file: DB2COPY/license/nodelock : usefule to see if license is installed on the HACMP standby host

### IOCP      ###

lslpp –l bos.iocp.rte

lsdev –Cc iocp


######################       Source DB2 Profile            ##############################################

Source DB2 profile:
. /db2/ccmlibi/home/ccmlibi/sqllib/db2profile

######################       DB2 ULIMIT Settings           ##############################################

ulimit –a if available update using smit user command – ulimited is indicated by -1

U-Limit errors: run  ksh getpstat64.ksh -i db2inst2 
Check size of DMS tables dbdf rmdb 70 30 anything over 70% full will be altered to to 30% full. output file is alter_tablespace.sql.

### Import database definitions on Windows *** Use double quotes around dir path with embedded SPACES 
C:\Program Files\IBM\SQLLIB_01\BIN>db2cfimp "C:\Documents and Settings\lsokolos\
My Documents\Documentation\DB2 Notes\db2_alias_list.txt"

########## Date Functions    ############
 2=seconds  8=hours  16=days 32=weeks 64=months 128=quarters 256=years 
 db2 "select timestampdiff (8,char(current_timestamp - timestamp('2011-08-29-13.49.13'))) from sysibm.sysdummy1"

########## Memory Usage      #############

db2mtrk -i -d         
db2mtrk –p 
db2mtrk -a
select * from table(admin_get_dbp_mem_usage()”
db2 get dbm cfg show detail|grep INSTANCE_MEMORY

db2pd -d rom –dbptnmem

db2pd –edus

db2pd –d cwow –mem

db2nps <node#> # shows process list similar to ps on UNIX

ps –mo THREAD –p 1921136


########## Disk Space        #############

db2diag -g oserr:="No space left on device"  db2diag.log.172

db2 "alter tablespace "legacy_4kMtB00" extend (file '/sbmig/LEGACYContainers/LEGACY_4KMTB00' 100)"


##########  DB2 Install #############

If you downloaded the DB2 database product image, you must decompress and untar the product file. 
Decompress the product file: 
gzip -d product.tar.gz For example, 
gzip -d ese.tar.gz
Untar the product file: 
On Linux operating systems 
tar -xvf product.tar For example, 
tar -xvf ese.tar

To uncompress a fix pack installation image, perform the following steps:
Copy the gzipped image to a temporary location. 
Change to the directory where you copied the image. 
Enter the following command to uncompress the file: 
gunzip -c filename.tar.gz | tar -xvf - where filename is the fix pack you are installing. 

Determine DB2 products and installation path..

cd /usr/bin 

db2ls {shows directory where db2 is installed}
db2ls –b /opt/IBM/DB2/V10.5 –q –p  # query products 

Install Path                       Level   Fix Pack   Special Install Number   Install Date                  Installer UID
---------------------------------------------------------------------------------------------------------------------
/testsbobj/db2data/home/wasadm/db2v9    9.5.0.0        0                            Tue Oct 13 14:50:51 2009 CDT             0
/testsbobj/db2data/home/db2inst5/db2v97    9.7.0.0        0                            Sat Oct 31 06:29:05 2009 CDT             0
/testsbobj/db2data/home/db2inst3/db2v97    9.7.0.0        0                            Sat Oct 31 06:42:41 2009 CDT             0
/testsbobj/db2data/home/was/db2v97    9.7.0.0        0                            Sat Oct 31 07:14:46 2009 CDT             0
/testsbobj/db2data/home/wasadm/db2v97    9.7.0.0        0                            Thu Feb 25 16:11:45 2010 CST             0
db2inst3@testsbobj:

#### DB2 System Controller ###

	ps –ef|grep db2sysc 

#### To get specific product information ...

for path in `db2ls|awk '/db2/ {print $1}'`
do
db2ls -b $path -q –p
db2ls –b $path 
done

db2 attach to db2inst3
db2 detach 


Install Path : /testsbobj/db2data/home/wasadm/db2v97

Product Response File ID         Level   Fix Pack   Product Description
---------------------------------------------------------------------------------------------------------------------
CLIENT                          9.7.0.0          0   IBM Data Server Client


##########  Check memory usage: ############

db2pd -mempools 
db2mtrk -i -p 

##########  DB2SUPPORT          ############

db2support . -d icmnlsdb -c -g 


########################  Check integrity of a compress backup ###########################################################

 db2ckbkp -c -cl ~ccmlibi/sqllib/lib/libdb2compr.a ICMNLSDB.0.ccmlibi.NODE0000.CATN0000.20110523220001.001


##########################################################  SYSIBMADM Views     #########################################

## oldest transaction , lock waits, etc ##

db2 "select db_name,db_status,last_backup,appls_cur_cons,locks_waiting,lock_timeouts,appl_id_oldest_xact from sysibmadm.snapdb"|strip.pl
db2 "select operation,operationtype,start_time,objecttype,location from sysibmadm.db_history where start_time>current_timestamp - 23 hour"


db2 "select substr(sqlerrm(-911),1,130) from sysibm.sysdummy1"

db2 "select substr(sqlerrm('sql911','',',','en_US',0),1,620) from sysibm.sysdummy1"

db2 "select * from sysibmadm.authorizationids"

db2 "select * from sysibmadm.db_history"

db2 "select * from sysibmadm.dbcfg"

db2 "select * from sysibmadm.dbmcfg"

db2 "select * from sysibmadm.dbpaths"

db2 "select * from sysibmadm.env_inst_info"

db2 "select * from sysibmadm.env_prod_info"

db2 "select * from sysibmadm.privileges" 

db2 "select * from sysibmadm.reg_variables"

db2 "select * from sysibmadm.applications"

db2 "select * from sysibmadm.tbsp_utilization" 

db2 "select * from sysibmadm.container_utilization"

db2 "select substr(tbsp_name,1,30) as tbsp_name,tbsp_id,substr(tbsp_state,1,40) as tbsp_state from sysibmadm.snaptbsp_part"

db2 "SELECT total_log_used,total_log_available,cast (100*((total_log_available-total_log_used)/total_log_available) as decimal(5,2)) as Percent ,SUBSTR(DB_NAME, 1,10)  FROM TABLE(SNAP_GET_DB_V91('', -2)) AS T" 
 
db2 "select substr(type,1,20) as type,substr(path,1,100) as path from sysibmadm.dbpaths"> paths.txt

db2 "select timestamp,substr(MSG,1,200) as MSG from sysibmadm.pdlogmsgs_last24hours where msgseverity in ('C','E') order by timestamp desc"

db2 "select snapshot_timestamp as snapts,num_executions as executed, average_execution_time_s as exec_time,substr(stmt_text,1,300) from sysibmadm.TOP_DYNAMIC_SQL"

db2 "select num_executions as executed, average_execution_time_s as exec_time,substr(stmt_text,1,60) from sysibmadm.TOP_DYNAMIC_SQL order by num_executions d
esc fetch first 10 rows only"

db2 "select substr(db_name,1,10) as DB,agent_id,substr(appl_name,1,10) as APP, substr(authid,1,8) as authid,substr(tbsp_name,1,15) as tbspnam,substr(tabschema,1,8) as tbsch,
substr(tabname,1,25) as tabname,lock_mode,lock_status,lock_escalation from sysibmadm.locks_held"

db2inst3@devhist: db2 describe table sysibmadm.locks_held

db2 "select application_handle,num_locks_held from table(mon_get_unit_of_work(NULL,-1)) as t order by num_locks_held desc"

db2 "select t.tabname,t.tbspaceid,s.tbspace from syscat.tables t inner join syscat.tablespaces s on t.tbspaceid=s.tbspaceid order by t.tbspaceid,t.tabname"|strip.p

db2 "select t.tabname,s.tbspaceid,s.tbspace from syscat.tables t right outer join syscat.tablespaces s on t.tbspaceid=s.tbspaceid order by t.tbspaceid,t.tabname"

db2 "select t.card,t.tabschema,t.tabname,t.tbspaceid,s.tbspace from syscat.tables t inner join syscat.tablespaces s on t.tbspaceid=s.tbspaceid order by t.tbspaceid,t.tabname"|strip.pl
##########             Long Running SQL         ###########

db2 "SELECT SUBSTR(STMT_TEXT, 1, 50) AS STMT_TEXT, AGENT_ID, ELAPSED_TIME_MIN, APPL_STATUS FROM SYSIBMADM.LONG_RUNNING_SQL"


### Timestamp Diff ###
db2 "select TIMESTAMPDIFF(4,CHAR(TIMESTAMP('2014-05-07-15.02.03.592550') -TIMESTAMP('2014-05-07-14.52.08.360997'))) from sysibm.dual"

Check Backup
db2 "select varchar(db_name,11),db_status,last_backup,appls_cur_cons,locks_waiting,lock_timeouts,appl_id_oldest_xact from sysibmadm.snapdb"
select 'Backup Missing '||varchar(db_name,11) as DBNAME from sysibmadm.snapdb where last_backup is NULL

db2 "select operation,operationtype,start_time,objecttype,location from sysibmadm.db_history where start_time>current_timestamp - 23 hour"
db2 "select operation,operationtype,start_time,objecttype,location from sysibmadm.db_history where operation='B' and start_time>current_timestamp - 7 days "



SELECT SUBSTR(STMT_TEXT, 1, 50) AS STMT_TEXT, AGENT_ID,ELAPSED_TIME_MIN, APPL_STATUS,  FROM  SYSIBMADM.LONG_RUNNING_SQL ORDER BY 
                                Data type                     Column
Column name                     schema    Data type name      Length     Scale Nulls
------------------------------- --------- ------------------- ---------- ----- ------
SNAPSHOT_TIMESTAMP              SYSIBM    TIMESTAMP                   10     6 Yes
DB_NAME                         SYSIBM    VARCHAR                    128     0 Yes
AGENT_ID                        SYSIBM    BIGINT                       8     0 Yes
APPL_NAME                       SYSIBM    VARCHAR                    256     0 Yes
AUTHID                          SYSIBM    VARCHAR                    128     0 Yes
TBSP_NAME                       SYSIBM    VARCHAR                    128     0 Yes
TABSCHEMA                       SYSIBM    VARCHAR                    128     0 Yes
TABNAME                         SYSIBM    VARCHAR                    128     0 Yes
TAB_FILE_ID                     SYSIBM    BIGINT                       8     0 Yes
LOCK_OBJECT_TYPE                SYSIBM    VARCHAR                     18     0 Yes
LOCK_NAME                       SYSIBM    VARCHAR                     32     0 Yes
LOCK_MODE                       SYSIBM    VARCHAR                     10     0 Yes
LOCK_STATUS                     SYSIBM    VARCHAR                     10     0 Yes
LOCK_ESCALATION                 SYSIBM    SMALLINT                     2     0 Yes
DBPARTITIONNUM                  SYSIBM    SMALLINT                     2     0 Yes

ERCCONCT *************************   ************** **********************************************
for agent in `db2 list applications|grep ERCCONCT|awk '{print $3}'`
do
`db2 get snapshot for application agentid $agent > snap_$agent`
done

*********************************  ****************  *********************************************
db2 "get snapshot for application agentid 123">snap

################  DB2DIAG ############################


db2diag  -fmt "%db %{ts}  %message $function"
db2diag -archive  will archive the db2diag.log file
db2diag -H 2h       will show last two hours of the log
db2diag -rc 
db2diag -g level=Severe
db2diag -g db=RMDB,instance=cmobji
db2diag -rc 0xFFFFE60A    (translate ZRC codes) 

db2diag -g message:="Disk was full"  db2diag.log

db2diag  -fmt "%db %{ts}  %message $function" -g message:=" Backup complete." (yields RMDB 2013-01-09-09.02.00.281033  Backup complete.) 
db2diag -g oserr:="No space left on device"  db2diag.log.172

######################################################

#####################             Catch an SQLCODE and dump to db2diag.log     ########################


db2pdcfg -catch -302 
db2pdcfg -catch status
db2pdcfg catch -clear

####################################################################################################

#################           Get HADR info                    ####################################### 


db2 "select substr(db_name,1,10) as dbname,hadr_role,hadr_state from table (snap_get_hadr('TRDB',-1)) as snap_hadr"

db2 get snaphot for database on trdb|grep -p HADR


###################################################################################################

########################      Log utilization              ########################################

db2 "select substr(db_name,1,10) as db_name,total_log_available_kb,total_log_used_top_kb,log_utilization_percent,total_log_used_kb from  sysibmadm.log_utilization"

db2 "SELECT total_log_used,total_log_available,cast (100*((total_log_available-total_log_used)/total_log_available) as decimal(5,2)) as Percent ,SUBSTR(DB_NAME, 1,10)  FROM TABLE(SNAP_GET_DB_V91('', -2)) AS T"

GET MONITOR SWITCHES

########################       Tablespace Info              ##########################################

SELECT varchar(tbsp_name, 30) as tbsp_name, member, tbsp_type,pool_data_p_reads, TBSP_AUTO_RESIZE_ENABLED, TBSP_MAX_PAGE_TOP FROM TABLE(MON_GET_TABLESPACE('',-2)) AS t ORDER BY pool_data_p_reads DESC

"select container_type, tbsp_id, container_name, total_pages from sysibmadm.snapcontainer order by tbsp_id, container_id"



########################       Global Temporary Tables      ##########################################

declare global temporary table t_status(status char(8), status_code int) on commit preserve rows not logged with replace

UPDATE MONITOR SWITCHES USING LOCK ON BUFFERPOOL ON STATEMENT ON TIMESTAMP ON TABLE ON UOW ON TABLE ON

Set schema=SELBD 
########################    Catalog node and database       ##########################################

db2 "catalog tcpip node selbd remote sblib server 60004 remote_instance db2inst2 system sblib ostype aix with 'Selboard Production' "
db2 attach to selbd user lsokolos
db2 catalog database selboard as selboard at node selbd authentication server



Windows host file- c:\winnt\system32\drivers\etc  

RUNSTATS ON TABLE BOL.MBR_HIST  ON ALL COLUMNS  WITH DISTRIBUTION  ON ALL COLUMNS  AND  INDEXES ALL ALLOW WRITE ACCESS


#######################    SNAPSHOT                        ###########################################

GET SNAPSHOT FOR LOCKS ON ICMNLSDB
GET SNAPSHOT FOR locks for application agentid 99
GET SNAPSHOT FOR APPLICATIONS ON RMDB
GET SNAPSHOT FOR locks for application applid GA010211.B614.070608122456
GET SNAPSHOT FOR APPLICATIONS FOR AGENTID 20222
GET SNAPSHOT FOR APPLICATION APPLID GA010211.B614.070608122456 
	DYNAMIC SQL WRITE TO FILE 
GET SNAPSHOT for DBM 
db2 get snapshot for database on selboard
db2 "values(current timezone
db2 "select db2_status,db2start_time,last_reset,local_cons,rem_cons_in from sysibmadm.snapdbm"
db2 "select substr(db_name,1,10), appls_in_db2,cat_cache_overflows,cat_cache_lookups, cat_cache_inserts,cat_cache_size_top from table(snap_db_v91(cast (null as varchar(128)), -2) as t"


db2 "select * from table (snapshot_lockwait(''selboard'',-1)) as wait"
db2 "select agent_id,lock_mode,agent_id_holding_lk,lock_wait_start_time,substr(table_name,1,30) as Table from table (snapshot_lockwait('selboard',-1)) as w"

db2 "select * from table (snapshot_lockwait('SELBOARD',-1)) as w"

Select * from table(snapshot_lock(‘SAMPLE’,-1)) as snapshot_lock

db2 "select * from table(snapshot_container('TRDkB',-1)) as snapshot_cont"

"Select * from table(snapshot_table('TRDB',-1)) as snapshot_t"

Select * from table(snapshot_tbreorg("SAMPLE",-1)) as snapshot_r

CALL SNAPSHOT_FILEW(6,’ROM,-1)

select lock_wait_start_time, agent_id, agent_id_holding_lk from table(snapshot_lockwait('rmdb',-1)) as a

Select * from table snapshot_appl_inf((CAST NULL as varchar(1)),CAST(NULL as Integer))) as T
LIST PACKAGES FOR SCHEMA schema-name
db2 "select substr(pkgname,1,10),stmtno,sectno,seqno,text from syscat.statements where pkgname='P1000210'">o
db2 "select substr(PKGSCHEMA,1,15) as schema, substr(PKGNAME,1,15) as pkgname,CREATE_TIME,EXPLICIT_BIND_TIME,LAST_BIND_TIME,PKG_CREATE_TIME from syscat.packages order by pkgschema,LAST_BIND_TIME desc"

######################      DB2 EXPLAIN                         ####################################################
db2expln -database trdb -z '';'' -f blk1.sql -output blk1.out
db2expln -database trdb -schema db2inst3 -package P6134731 -output my.out
db2expln -database trdb -terminator ';' -f blk1.sql -output blk1.out
db2expln -schema ICMADMIN -escape ! package XYZ!%
db2expln -database TRDB -t -q "select * from syscat.tables"
db2exfmt -1 -d RMDB -g -o outfilename

“FORCE APPLICATION (12345, 54321)”  

######################      db2pd                             #####################################################
FORCE APPLICATION (891)
db2pd -db selboard -locks -transa -age -file lock.txt
db2pd -db sample -static
db2pd -db sample -app -dyn file=lxs.out
db2pd -db sample -tablespaces -group
db2pd -database selboard -locks -tra -age -file lockinfo.txt
db2mtrk -i -p -w -d -v
dbdf selboard
db2cctrc C:\cctrc.txt

LIST HISTORY BACKUP since 20140601 for ICMNLSDB 

db2ckbkp -h 

backup ONLINE keyword implies INCLUDE LOGS option.


#################################  SECURITY ######################################################################

RBAC Roles
rolelist
swrole db2-admin
rolelist -a
[MILL][lsokolos@nppdb01:/export/DB2/server_t] rolelist -a
db2-admin       aix.security.group.create.normal
                aix.security.group.list
                aix.security.group.remove.normal
                aix.security.passwd.normal
                aix.security.user.create.normal
                aix.security.user.list
                aix.security.user.remove.normal

DB2 “tech” location for DB2 software installation: cd /export/DB2
-rwxr-xr-x    1 bin      bin            5154 Aug 14 2014  db2setup


-- Who has DBADM or SECADM authority?
db2 grant secadm on database to user lsokolos,andersf
db2 grant dbadm with dataaccess on database to user lcad

db2 "select * from table (sysproc.auth_list_authorities_for_authid('TRDBI','U')) as T order by authority"
 
db2 "select * from syscat.dbauth where DBADMAUTH='Y' or SECURITYADMAUTH='Y'"
db2 "select GRANTEE,DBADMAUTH,SECURITYADMAUTH from syscat.dbauth where DBADMAUTH='Y' or SECURITYADMAUTH='Y'"

db2 "value SYSPROC.AUTH_GET_INSTANCE_AUTHID()"
db2 "select substr(privilege,1,11) as privilege, substr(objectname,1,30) as object ,substr(objectschema,1,15) as schema, objecttype from sysibmadm.privileges where authid='LSOKOLOS'"
db2 "select * from sysibmadm.authorizationids"

#################################### List Role authority ##########################

"select substr(privilege,1,11) as privilege, substr(objectname,1,30) as object ,substr(objectschema,1,15) as schema, objecttype from sysibmadm.privileges where authid='SELBDDEBUG' and objectschema in ('SELBD','OEBS') order by objectschema,objecttype,privilege"

SELECT GRANTOR, GRANTORTYPE, GRANTEE, GRANTEETYPE, ROLENAME, CREATE_TIME, ADMIN FROM TABLE (SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID ('KOFAXADMR', 'U') ) AS T

db2 list applications
db2 list command options
db2set db2options=   resets to default
db2set db2options="-v -z myfile.log"
update command options using option value
db2 get db cfg or select * from sysibmadm.dbcfg
db2 get dbm cfg
Import uses double quotes for strings (“text”) in delimited files; INSERT stmt using single quotes ( ‘ )
Use modified by chardel’’ to change the delimiter to a single quote- makes it easier to run the Perl "build_bulk_insert.pl" 
that inserts into Global Temporary Tables.

db2 "export to selbd_itemid.del of del modified by chardel'' messages export_itemids.msgs select board_id,eligible_id,eligible_doc_id,cm_primary_id,is_ompf,is
_hidden,substr(cm_item_type,1,10) as cm_item_type from selbd.eligible_document where board_id='$boardid' with ur"

db2look -d trdb -t fe_document -a -l -e -x -c
ksh evmon_ctl.ksh trdb stmt start (stop)


#################################### Start event monitor manually old-way ###################################################

1. db2 "create event monitor stmt_evts for statements where (or APPL_ID=) AUTH_ID='cjfleenor' write to file '$HOME/evtmondata/icmnlsdb_stmt' maxfiles none MANUALSTART"
2. db2 "set event monitor STMT_EVTS state=1"   ..... start monitor
monitor......... ........ ....... 
3. db2 "set event monitor stmt_evts state=0"   ..... stop monitor
4. db2evmon -db icmnlsdb -evm STMT_EVTS>stmts      ..... format output
5. db2 drop event monitor STMT_EVTS               .... drop event monitor afterwards
6. db2 "select event_mon_state('STMT_EVTS') as state,evmonname from syscat.eventmonitors"
SELECT EVMONNAME,CASE WHEN EVENT_MON_STATE(EVMONNAME) = 0 THEN 'Inactive' WHEN EVENT_MON_STATE(EVMONNAME) = 1 THEN 'Active' END FROM SYSCAT.EVENTMONITORS

SELECT EVMONNAME,
     CASE
       WHEN EVENT_MON_STATE(EVMONNAME) = 0 THEN 'Inactive'
       WHEN EVENT_MON_STATE(EVMONNAME) = 1 THEN 'Active'
     END
     FROM SYSCAT.EVENTMONITORS

#################################### Start event monitor manually – New Way 9.7.7 ###################################################


1.	db2 update db cfg using mon_deadlock HIST_AND_VALUES
2.	create event monitor lock_evts for locking deadlock|locktimeout|lockwait write to unformatted event table (tablename mondata.locks in mondatats4k pctdeactivate 60 manualstart|autostart”

a.	db2 "create event monitor stmt_evts for statements where auth_id='lsokolos' write to table STMT (table mondata.stmts in MONDATATS4K pctdeactivate 60)  manualstart"
b.	db2 “select * from mondata.stmts

3.	db2 "set event monitor LOCK_EVTS state=1"   
4.	db2 “evmon_format_ue_to_tables (locking|pkgcache|uow),NULL,NULL,NULL,mondata,mondatats4k,NULL,-1 ’select * from mondata.locks where event_timestamp >current_timestamp -1 hour’) – creates additional tables

Tables created by deadlock monitor:
LOCKEVENTS
LOCK_EVENT
LOCK_PARTICIPANTS
LOCK_PARTICIPANT_ACTIVITIES
LOCK_ACTIVITY_VALUES



################################# DB2 TRACE          #############################################################################

db2trc on -f trc.dmp   -- turn trace on and write output to file "trc.dmp"
db2trc clear
db2 connect to selboard
db2trc -p 10.1     -- trace pid 10 and thread one.
db2trc dump trc.dmp  
db2trc off
db2trc flow trc.dmp trc.flw -- format binary file to readable format
db2trc fmt trc.dmp trc.fmt  -- format 


#################################  Catalog Queries   ##############################################################################

### READ bind files: ### 
db2bfd -s -v icmplsbc.bnd|more


SELECT (data_object_p_size + index_object_p_size + long_object_p_size +
  lob_object_p_size + xml_object_p_size) as total_p_size
  FROM TABLE( SYSPROC.ADMIN_GET_TAB_INFO( 'DBUSER1', 'EMPLOYEE' )) AS T

################################   Selection Board CM date change   ###############################################################

update ICMADMIN.ICMUT01174001
set ATTR0000001561 = ATTR0000001561 - 10 year
where ATTR0000001260 = '143943423';

select ATTR0000001561 from ICMADMIN.ICMUT01174001 where ATTR0000001260 = '143943423';


select substr(p.specificname,1,20) as Specificname,substr(r.bname,1,20) as Bname,k.unique_id
from syscat.procedures p, syscat.routinedep r, syscat.packages k
where p.specificname = r.routinename and
      k.pkgname = r.bname and
      p.specificname ='CALCRPTSENAVG';

select substr(pkgschema,1,10) as pkgschema, substr(pkgname,1,15) as pkgname, substr(boundby,1,30) as boundby,substr(definer,1,3) as definer
 from syscat.packages;

select substr(procname,1,30),substr(specificname,1,30),procedure_id,
case contains_sql
when 'C' then 'Contains SQL'
when 'M' then 'Modify SQL DATA'
when 'N' then 'No SQL'
when 'R' then 'READS SQL DATA'
else 'unkown'
end ,
language,program_type
from syscat.procedures;

list tablespace show detail :egrep 'ID|Name|Total Pages'
!awk  '{print $4 $7 $11}'
60 trdb_16kLrD00 16680
61 trdb_8kMrD02 1400
62 trdb_8kMrI02 1000

-- List tablespace containters and tbsp_id

db2 "select tbsp_id,varchar(tbsp_name,20) as tbsp,varchar(container_name,70) as container ,TOTAL_PAGES from table(mon_get_container('',-2)) as T "

TBSP_ID              TBSP                 CONTAINER                                                              TOTAL_PAGES
-------------------- -------------------- ---------------------------------------------------------------------- --------------------
                   0 SYSCATSPACE          /testprlib/db2data/home/cmobji/RMDBcontainers/SYSCATSPACE                                 0


1 shift G ! shift G

 perl -pi -e "s/\"/'/g" insert_selbd_itemids.sql (use when changing export double quotes to single quotes) 

check Tablespace status
 perl -ne 'print if /State/ ... /Normal/' regex_text (Perl range expression) 

db2 list tablespaces | perl -0ne 'print "$ARGV\n" if s/State//ig != s/Normal//ig'
DB2 timestamp format ‘2007-07-01 09:01:01’

db2inst1@prlib: perl -pi -e "s/\"/'/g" itls.del
db2set –ALL    lists the DB2 “registry variables”

db2inst3@devhist: db2 list tablespaces

db2inst3@devhist: perl -0ne 'print "$ARGV\n" if s/State//ig != s/Normal//ig' o

KILL DB2 Hard...
alias psg="ps -ef | grep -v grep | grep"
for p in `psg db2|awk '{print $2}'`
> do
> kill -9 $p
> done
clean up shared memory...
for s in `ipcs -s|grep db2inst2|awk '{print $2}'`
> do
> ipcrm -s $s
> done


for s in `ipcs -m|grep db2inst2|awk '{print $2}'`
> do
> ipcrm -m $s
> done

######## LAST USED ##########
DATAPARTITIONS
INDEXES
PACKAGES
TABLES
SYSDATAPARTITIONS
SYSINDEXES
SYSPLAN
SYSTABLES


db2 "select tabschema,tabname,indname,lastused from syscat.indexes where tabschema in ('ESUBMISSION','DB2INST3') and lastused='01/01/0001' "|perl strip.pl

######## ORACLE #############

lsokolos@sndbx1i@opdb01: db2 set serveroutput on
DB20000I  The SET SERVEROUTPUT command completed successfully.

This is needed to write to STDOUT or UTL_FILE using DBMS_OUTPUT.PUTLINE('Hello World')


CLPPLUS is like Oracles SQLPlus command window it can be invoked from the Windows DB2 or from Unix, but need to have X11 work so
start EXCEED first and one the Unix command line

export DISPLAY=10.1.11.1:0

### Simple Stored Procedure

create or replace procedure test_ora
as
begin

DBMS_OUTPUT.PUT_LINE('Inside proc');
end test_ora@

db2 -vtd@ -f test_ora.proc 
lsokolos@sndbx1i@opdb01: db2 call test_ora

  Return Status = 0

Inside proc
